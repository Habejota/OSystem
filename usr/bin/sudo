#!/bin/bash

command_to_run=''
for arg in "$@"; do
    case "$arg" in
        *\'*)
            arg="$(printf "%s" "$arg" | sed "s/'/'\"'\"'/g")"
            ;;
        *) : ;;
    esac
    [[ -n "$command_to_run" ]] && command_to_run="$command_to_run "
    command_to_run="$command_to_run'$arg'"
done

if [ -z "$command_to_run" ]; then
	echo "Usage: sudo command"
	echo "Runs command with administrator privileges."
	exit
fi

# Query admin rights http://stackoverflow.com/a/21295806/1641422
fsutil dirty query $SYSTEMDRIVE >/dev/null 2>&1
ret=$?
if [ $ret -eq 127 ]; then
	# If fail try another way http://stackoverflow.com/a/28268802
	fltmc >/dev/null 2>&1
	ret=$?
fi
if [ $ret -eq 0 ]; then
	#if elevated just run command
	exec "$command_to_run"
fi


# get backend path 
backend="$(realpath "${BASH_SOURCE[0]}backend")"

umask 066
fifoid="/tmp/.sudo.$RANDOM"
mkfifo "$fifoid.finish"
mkfifo "$fifoid.pidf"
mkfifo "$fifoid.sigint"

export -p >"$fifoid.env"

echo "$command_to_run" >"$fifoid.command"

# Create fifos
for fd in 0 1 2; do
	if [ -t $fd ]; then
		# Terminal
		readlink "/proc/$$/fd/$fd" >"$fifoid.fd$fd"
	else
		# Not terminal
		mkfifo "$fifoid.pipe$fd"
		echo "$fifoid.pipe$fd" >"$fifoid.fd$fd"
	fi
done

function clean {
	rm "$fifoid.finish" "$fifoid.sigint" "$fifoid.pidf" "$fifoid.command" "$fifoid.env"

	# Remove stdin/stdout/stderr
	for fd in 0 1 2; do
		if [ ! -t $fd ]; then
			rm "$fifoid.pipe$fd"
		fi
		rm "$fifoid.fd$fd"
	done
}
trap clean EXIT

# Run command
if ! powershell.exe Start-Process \""$(cygpath -w /bin/)"bash\" \""$backend"\", \"$fifoid\" -Verb RunAs -WorkingDirectory \"\$PWD\" -WindowStyle Hidden\; \(\$Error[0]\).InvocationInfo.Line; then
	echo "UAC elevation was canceled" >&2
	exit 1
fi

# Get pid
pid="$(cat "$fifoid.pidf")"

# Wait
trap "echo 1 >\"$fifoid.sigint\" && sleep 0.1" SIGINT

# Pass stdin fifo
if [ ! -t 0 ]; then
	( cat <&3 >"$fifoid.pipe0" & ) 3<&0
fi

# Cat stdout and stderr
for fd in 1 2; do
	if [ ! -t $fd ]; then
		cat "$fifoid.pipe1" &
	fi
done

while true; do
	res="$(cat "$fifoid.finish")"
	if [ -n "$res" ]; then
		break
	fi
done
